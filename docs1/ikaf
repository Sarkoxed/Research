Верификация примитивов в цепях доказательств с нулевым разглашением при помощи символьного исполнения

Обеспечение целостности и доступности в цепях доказательств с нулевым разглашением

1) Проанализировать генерацию R1CS представлений цепей в различных подходах к генерации доказательств
2) Проанализировать различные подходы к символьному исполнению
3) Разработать инструмент для автоматизации процесса верификации
4) На основе изученных материалов и полученных результатов сформулировать дальнейшие планы по развитию исследования

1) Представлен инструмент для автоматизации процесса верификации
2) Получен результат анализа популярных библиотек примитивов при помощи реализованного инструмента
3) Получен список распространенных уязвимостей, которые могут быть найдены при помощи реализованного инструмента

1) Wen H., Stephens J., Chen Y., Ferles K. Practical Security Analysis of Zero-Knowledge Proof Circuits [Текст] // University of California. - 2023.
2) Nikolaj B., Leonardo M., Lev N. Programming Z3 [Электронный ресурс] – Режим доступа к ресурсу: https://theory.stanford.edu/~nikolaj/programmingz3.html#sec-intro, свободный.
3) Binary format for R1CS. [Электронный Ресурс] - Режим доступа к ресурсу: https://github.com/iden3/r1csfile/blob/master/doc/r1cs_bin_format.md, свободный.
4) Security of ZK systems [Электронный ресурс] — Режим доступа к ресурсу: https://www.youtube.com/watch?v=SxI8uNBp05k&t=4739s, свободный.
5) Goldreich O. Zero-Knowledge twenty years after its invention [Текст] //
Weizmann Institute of Science. — 2002.
